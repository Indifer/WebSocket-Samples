using System;
using System.Collections.Generic;
using System.Linq;
using System.ServiceModel;
using System.Text;
using System.Threading;
using System.Web;
using Microsoft.ApplicationServer.WebSockets;

namespace WebSocketChatAspNet
{
    public class ChatService : WebSocketService
    {
        private static WebSocketConnectionGroup<ChatService> clients = new WebSocketConnectionGroup<ChatService>();
        private static int count = 0;

        private string name;
        //private IDisposable groupMembership;

        public override void OnOpen()
        {
            clients.Add(this);            
            this.name = string.Format("Client {0}", 
                Interlocked.Increment(ref count));

<<<<<<< HEAD
            clients.Broadcast(string.Format("{0} joined.", name))
                .Wait();
=======
            clients.Broadcast("{0} joined.", name);
>>>>>>> dataflow
        }

        protected override void OnClose(object sender, EventArgs e)
        {
<<<<<<< HEAD
            //groupMembership.Dispose();
            clients.Remove(this);
            clients.Broadcast(string.Format("{0} left.", name));
=======
            groupMembership.Dispose();
            clients.Broadcast("{0} left.", name);
>>>>>>> dataflow
        }

        protected override void OnError(object sender, EventArgs e)
        {
<<<<<<< HEAD
            //groupMembership.Dispose();
            clients.Remove(this);
            clients.Broadcast(string.Format("{0} left (error).", name));
=======
            groupMembership.Dispose();
            clients.Broadcast("{0} left (error).", name);
>>>>>>> dataflow
        }

        public override void OnMessage(string message)
        {
            clients.Broadcast("{0}: {1}", name, message);
        }        
    }




    
}